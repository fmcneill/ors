


(In-Package "ONTOLINGUA-USER")

;;; Written by user Fionam from session "learners" owned by group UNIVERSE
;;; Date: Nov 17, 2004  09:35
;;; Definitions: 54


(Define-Ontology
     Sem-Web-Lucas
     (Frame-Ontology)
   "Not supplied yet."
   :Io-Package
   "ONTOLINGUA-USER")


(In-Ontology (Quote Shopping))



;;; Item

(Define-Class Item (?X) "Not supplied yet." :Def (And (Thing ?X)))

;;; Group

(Define-Class Group (?X) "Not supplied yet." :Def (And (Thing ?X)))

;;; Shopping-Group

(Define-Class Shopping-Group (?X) "Not supplied yet." :Def (And (Group ?X)))

;;; Academic-Group

(Define-Class Academic-Group (?X) "Not supplied yet." :Def (And (Group ?X)))

;;; Agent

(Define-Class Agent (?X) "Not supplied yet." :Def (And (Thing ?X)))

;;; Book

(Define-Class Book (?X) "Not supplied yet." :Def (And (Item ?X)))

;;; Buy

(Define-Axiom Buy "Not supplied yet." := (=> (And (In-Basket ?Agent ?Item Pseudo-Var ?Sit1) (Money ?Agent ?MetaVar ?Amount ?Sit1) (Cost ?Item ?Price ?Sit1) (< ?Price ?Amount)) (And (Has ?Agent ?Item ?Sit2) (= ?Newamount (- ?Amount ?Price)) (Money ?Agent ?MetaVar ?Newamount ?Sit2) (Not (Money ?Agent ?MetaVar ?Amount ?Sit2)))))

;;; Has

(Define-Relation Has (?Agent ?Item ?Situation) "Not supplied yet." :Def (And (Agent ?Agent) (Item ?Item) (Sit-Var ?Situation)))

;;; In-Basket

(Define-Function In-Basket (?Agent-0 ?Item ?Situation) :-> ?Value "Not supplied yet." :Def (And (Agent ?Agent-0) (Item ?Item) (Confirmation-Number ?Value) (Sit-Var ?Situation)))

;;; Choose-Item

(Define-Relation Choose-Item (?Agent ?Item ?Situation) "Not supplied yet." :Def (And (Agent ?Agent) (Item ?Item) (Sit-Var ?Situation)))

;;; Choose-Thing

(Define-Relation Choose-Thing (?Agent ?Item ?Situation) "Not supplied yet." :Def (And (Agent ?Agent) (Item ?Item) (Sit-Var ?Situation)))

;;; Registered-Member

(Define-Relation Registered-Member (?Agent ?Group ?Situation) "Not supplied yet." :Def (And (Agent ?Agent) (Group ?Group) (Sit-Var ?Situation)))

;;; Cost

(Define-Function Cost (?Item ?Situation) :-> ?Value "Not supplied yet." :Def (And (Item ?Item) (Number ?Value) (Sit-Var ?Situation)))

;;; Money

(Define-Function Money (?Agent-0 ?Currency3 ?Situation) :-> ?Value "Not supplied yet." :Def (And (Agent ?Agent-0) (Currency ?Currency3) (Number ?Value) (Sit-Var ?Situation)))

;;; Put-In-Basket

(Define-Axiom Put-In-Basket "Not supplied yet." := (=> (And (Choose-Thing ?Agent ?Item ?Sit1) (Registered-Member ?Agent ?Group) (Group ?Group) (Shopping-Group ?Group)) (And (In-Basket ?Agent ?Item Pseudo-Var ?Sit2))))

;;; Join-Group

(Define-Axiom Join-Group "Not supplied yet." := (=> (And (Group ?Group)) (And (Registered-Member ?Agent ?Group))))

;;; Our-Mutual-Friend

(Define-Frame Our-Mutual-Friend  :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Book)) :Axioms ((Cost Our-Mutual-Friend 9 [(Buy Shopping-Agent Our-Mutual-Friend Euros)(Put-In-Basket Shopping-Agent Book-Shop-Group Our-Mutual-Friend)(Join-Group Shopping-Agent Book-Shop-Group)(Start)])))

;;; Book-Shop-Group

(Define-Individual Book-Shop-Group (Shopping-Group) "Not supplied yet.")

;;; Ai-Group

(Define-Individual Ai-Group (Academic-Group) "Not supplied yet.")

;;; Shopping-Agent

(Define-Frame Shopping-Agent :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Agent) (Registered-Member Ai-Group [(Buy Shopping-Agent Our-Mutual-Friend Euros)(Put-In-Basket Shopping-Agent Book-Shop-Group Our-Mutual-Friend)(Join-Group Shopping-Agent Book-Shop-Group)(Start)]) (Choose-Thing Our-Mutual-Friend [(Buy Shopping-Agent Our-Mutual-Friend Euros)(Put-In-Basket Shopping-Agent Book-Shop-Group Our-Mutual-Friend)(Join-Group Shopping-Agent Book-Shop-Group)(Start)]) (Registered-Member Book-Shop-Group [(Buy Shopping-Agent Our-Mutual-Friend Euros)(Put-In-Basket Shopping-Agent Book-Shop-Group Our-Mutual-Friend)(Join-Group Shopping-Agent Book-Shop-Group)(Start)]) (In-Basket Our-Mutual-Friend 47899 [(Buy Shopping-Agent Our-Mutual-Friend Euros)(Put-In-Basket Shopping-Agent Book-Shop-Group Our-Mutual-Friend)(Join-Group Shopping-Agent Book-Shop-Group)(Start)]) (Has Our-Mutual-Friend [(Buy Shopping-Agent Our-Mutual-Friend Euros)(Put-In-Basket Shopping-Agent Book-Shop-Group Our-Mutual-Friend)(Join-Group Shopping-Agent Book-Shop-Group)(Start)])) :Axioms ((Money Shopping-Agent Euros 91 [(Buy Shopping-Agent Our-Mutual-Friend Euros)(Put-In-Basket Shopping-Agent Book-Shop-Group Our-Mutual-Friend)(Join-Group Shopping-Agent Book-Shop-Group)(Start)])))

;;; Currency

(Define-Class Currency (?X) "Not supplied yet." :Def (And (Thing ?X)))

;;; Dollars

(Define-Individual Dollars (Currency) "Not supplied yet.")

;;; Euros

(Define-Individual Euros (Currency) "Not supplied yet.")

;;; Sterling

(Define-Function Sterling (?Agent-0 ?Situation) :-> ?Value "Not supplied yet." :Def (And (Agent ?Agent-0) (Number ?Value) (Sit-Var ?Situation)))

;;; Confirmation-Number

(Define-Class Confirmation-Number (?X) "Not supplied yet." :Def (And (Thing ?X)))

;;; Pseudo-Var

(Define-Individual Pseudo-Var (Confirmation-Number) "Not supplied yet.")

;;; Sit-Var

(Define-Class Sit-Var (?X) "Not supplied yet." :Def (And (Thing ?X)))

;;; Start


(Define-Individual Start (Sit-Var) "Not supplied yet.")
Sit-Var (?X) "Not supplied yet." :Def (And (Thing ?X)))

;;; Start


(Define-Individual Start (Sit-Var) "Not supplied yet.")






































